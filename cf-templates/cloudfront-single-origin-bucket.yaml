AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'RAP SPIKE Distribution'

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - staging
      - production
    Default: staging
    Description: Environment that can be added to resource names

Resources:

  ArtifactsBucket:
    DeletionPolicy: 'Delete'
    Metadata:
      Comment: 'Bucket to store code artifacts'
    Properties:
      AccessControl: 'Private'
      BucketName: !Sub 'ce-artifacts-${AWS::StackName}-${AWS::AccountId}'
    Type: 'AWS::S3::Bucket'

  ContentsBucket:
    DeletionPolicy: 'Delete'
    Metadata:
      Comment: 'Bucket to store raw content data'
    Properties:
      AccessControl: 'Private'
      BucketName: !Sub 'ce-contents-${AWS::StackName}-${AWS::AccountId}'
    Type: 'AWS::S3::Bucket'

  ContentsBucketPolicy:
    Metadata:
      Comment: 'Bucket policy to allow cloudfront to access the data'
    Properties:
      Bucket: !Ref ContentsBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: 'Allow'
            Principal:
              CanonicalUser: !GetAtt CfOriginAccessIdentity.S3CanonicalUserId
            Resource:
              - !Sub 'arn:aws:s3:::${ContentsBucket}/*'
    Type: 'AWS::S3::BucketPolicy'

  LambdaEdgeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../.aws-sam/build/LambdaEdgeFunction/
      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      Runtime: python3.7
      Handler: lambda_function.lambda_handler
      Timeout: 5
      AutoPublishAlias: live

  LambdaEdgeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"

  CfDistribution:
    Properties:
      DistributionConfig:
        Comment: !Sub '${Environment} - Distribution for RAP Spike'
        DefaultCacheBehavior:
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref LambdaEdgeFunction.Version
          AllowedMethods:
            - 'HEAD'
            - 'GET'
          CachedMethods:
            - 'HEAD'
            - 'GET'
          Compress: false
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: 'none'
            Headers:
              - 'Origin'
            QueryString: false
          MaxTTL: 31536000
          MinTTL: 86400
          TargetOriginId: MainOrigin
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: 'http1.1'
        IPV6Enabled: false
        Origins:
          - DomainName: !GetAtt ContentsBucket.DomainName
            Id: MainOrigin
            OriginPath: ''
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CfOriginAccessIdentity}'
        PriceClass: 'PriceClass_All'
    Type: 'AWS::CloudFront::Distribution'

  CfOriginAccessIdentity:
    Metadata:
      Comment: 'Access S3 bucket content only through CloudFront'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Access S3 bucket content only through CloudFront'
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'

Outputs:
  ArtifactsBucket:
    Description: 'CE Artifacts S3 Bucket'
    Value: !Ref ArtifactsBucket
  ContentsBucket:
    Description: 'CE Book Contents S3 Bucket'
    Value: !Ref ContentsBucket
  LambdaEdgeFunction:
    Description: Lambda@Edge handler for content
    Value: !Ref LambdaEdgeFunction.Version
  CfDistributionId:
    Description: 'Id for our cloudfront distribution'
    Value: !Ref CfDistribution
  CfDistributionDomainName:
    Description: 'Domain name for our cloudfront distribution'
    Value: !GetAtt CfDistribution.DomainName

